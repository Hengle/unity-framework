{"name":"CleaveFramework","tagline":"An application framework for C# Unity game projects","body":"ï»¿# CleaveFramework v0.2.0\r\n\r\nA Unity3D C# application framework.\r\n\r\n## Quick Feature Overview\r\n\r\n * Unity Scene Management\r\n   - Transitional Loading Scenes\r\n * C# Object Management with modular Interface support\r\n   - Global Objects\r\n     * Resolve object instances across your entire application in any scene or class\r\n   - Scene Objects\r\n     * Resolve scene specific object instances in any class\r\n   - Automatically Update Objects\r\n     * Object Manager takes care of updating objects that require it for you.  Stops you from creating general objects specifically to manage other objects.\r\n * Object Creation Factory supports C# Objects and Unity Component Attachments\r\n   - Attach Constructors to MonoBehaviour Components\r\n * Automated Dependency Injection Module\r\n * Global Application level Executable Command Queuing System\r\n   - Reusable Command Framework and Executable Command Queue Object in your own implementations\r\n * Private Command Subscription for Multi-Delegate Callbacks\r\n * Generic Data Binding Libraries\r\n   - Bind and Resolve almost any two types together quickly and easily from one object.\r\n\r\nMost of these features are optional modules you can use as much or as little of as your project requires.\r\n\r\n## Why you use a framework\r\n\r\nA good application framework allows it's users to save time by using generic code that allows them to focus on more project-specific areas.  \r\n\r\nA great application framework provides it's users with excellent, fast, well tested, and well maintained generic modules capable of providing their application with a structure they can depend on.\r\n\r\nEvery piece of software you've even worked with has utilized a framework in one way or another.  Whether it was home-rolled or an off the shelf solution the very structure of your code base makes up the framework it executes on.  If you've ever finished, or worse started and not finished, a project using the Unity3D engine you realize the importance of well structuring your code.  If find yourself re-implementing the same functionality from project to project time and time again then you are a great candidate for migrating your work-flow into a framework package.\r\n\r\n## Documentation\r\n\r\n### [About](https://github.com/cleavetv/unity-framework/blob/master/Docs/About.md)\r\n### [Installation](https://github.com/cleavetv/unity-framework/blob/master/Docs/Installation.md)\r\n### [Core Principals](https://github.com/cleavetv/unity-framework/blob/master/Docs/CorePrincipals.md)\r\n### [Basic Example Usage](https://github.com/cleavetv/unity-framework/blob/master/Docs/BasicUsage.md)\r\n### [Sample Project](https://github.com/cleavetv/unity-framework/blob/master/Docs/CleaveFrameworkSampleProject.md)\r\n### [Framework Objects](https://github.com/cleavetv/unity-framework/blob/master/Docs/FrameworkObjectsTOC.md)\r\n### [Interfaces](https://github.com/cleavetv/unity-framework/blob/master/Docs/Interfaces.md)\r\n### [Quick Snippets](https://github.com/cleavetv/unity-framework/blob/master/Docs/QuickSnippets.md)\r\n### [Contributions](https://github.com/cleavetv/unity-framework/blob/master/Docs/Contributions.md)\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}